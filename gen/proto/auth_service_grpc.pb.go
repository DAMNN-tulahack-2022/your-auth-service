// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: auth_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// YourAdminServiceClient is the client API for YourAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type YourAdminServiceClient interface {
	GithubLogin(ctx context.Context, in *GithubLoginRequest, opts ...grpc.CallOption) (*GithubLoginResponse, error)
}

type yourAdminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewYourAdminServiceClient(cc grpc.ClientConnInterface) YourAdminServiceClient {
	return &yourAdminServiceClient{cc}
}

func (c *yourAdminServiceClient) GithubLogin(ctx context.Context, in *GithubLoginRequest, opts ...grpc.CallOption) (*GithubLoginResponse, error) {
	out := new(GithubLoginResponse)
	err := c.cc.Invoke(ctx, "/proto.YourAdminService/GithubLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YourAdminServiceServer is the server API for YourAdminService service.
// All implementations must embed UnimplementedYourAdminServiceServer
// for forward compatibility
type YourAdminServiceServer interface {
	GithubLogin(context.Context, *GithubLoginRequest) (*GithubLoginResponse, error)
	mustEmbedUnimplementedYourAdminServiceServer()
}

// UnimplementedYourAdminServiceServer must be embedded to have forward compatible implementations.
type UnimplementedYourAdminServiceServer struct {
}

func (UnimplementedYourAdminServiceServer) GithubLogin(context.Context, *GithubLoginRequest) (*GithubLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GithubLogin not implemented")
}
func (UnimplementedYourAdminServiceServer) mustEmbedUnimplementedYourAdminServiceServer() {}

// UnsafeYourAdminServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to YourAdminServiceServer will
// result in compilation errors.
type UnsafeYourAdminServiceServer interface {
	mustEmbedUnimplementedYourAdminServiceServer()
}

func RegisterYourAdminServiceServer(s grpc.ServiceRegistrar, srv YourAdminServiceServer) {
	s.RegisterService(&YourAdminService_ServiceDesc, srv)
}

func _YourAdminService_GithubLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GithubLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YourAdminServiceServer).GithubLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.YourAdminService/GithubLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YourAdminServiceServer).GithubLogin(ctx, req.(*GithubLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// YourAdminService_ServiceDesc is the grpc.ServiceDesc for YourAdminService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var YourAdminService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.YourAdminService",
	HandlerType: (*YourAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GithubLogin",
			Handler:    _YourAdminService_GithubLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth_service.proto",
}
